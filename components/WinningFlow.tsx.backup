"use client";

import { useEffect, useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { Trophy, Sparkles, Coins, Star, Zap } from "lucide-react";
import { Button } from "./ui/button";
import { Card } from "./ui/card";
import { formatNumber } from "@/lib/formatNumber";

interface LotteryEntry {
  requestId: string;
  playId: string;
  roundId: number;
  entryDate: string;
  cost: number;
  status: "pending" | "won-jackpot" | "won-consolation" | "lost";
  prizeAmount?: number;
  settledDate?: string;
}

interface WinningFlowProps {
  entry: LotteryEntry;
  onClose: () => void;
}

export function WinningFlow({ entry, onClose }: WinningFlowProps) {
  const [showConfetti, setShowConfetti] = useState(false);
  const [showPrize, setShowPrize] = useState(false);

  const isJackpot = entry.status === "won-jackpot";
  const isConsolation = entry.status === "won-consolation";
  const isWin = isJackpot || isConsolation;

  useEffect(() => {
    if (isWin) {
      // Start confetti immediately for wins
      setShowConfetti(true);

      // Show prize amount after delay
      setTimeout(() => {
        setShowPrize(true);
      }, 1000);
    } else {
      // For losses, just show the message
      setShowPrize(true);
    }
  }, [isWin]);

  // Confetti particles
  const confettiCount = isJackpot ? 100 : 50;
  const confettiColors = [
    "#ffd700",
    "#ff00ff",
    "#00ffff",
    "#ff1493",
    "#7fff00",
  ];

  return (
    <motion.div
      className="fixed inset-0 z-50 flex items-center justify-center bg-black/90"
      initial={{ opacity: 0 }}
      animate={{ opacity: 1 }}
      exit={{ opacity: 0 }}
    >
      {/* Confetti */}
      <AnimatePresence>
        {showConfetti && isWin && (
          <>
            {Array.from({ length: confettiCount }).map((_, i) => (
              <motion.div
                key={i}
                className="absolute w-3 h-3 rounded-full"
                style={{
                  background:
                    confettiColors[
                      Math.floor(Math.random() * confettiColors.length)
                    ],
                  left: `${Math.random() * 100}%`,
                  top: -20,
                }}
                initial={{ y: -20, opacity: 1, rotate: 0 }}
                animate={{
                  y: window.innerHeight + 20,
                  opacity: [1, 1, 0],
                  rotate: Math.random() * 720,
                  x: (Math.random() - 0.5) * 200,
                }}
                transition={{
                  duration: Math.random() * 2 + 2,
                  delay: Math.random() * 0.5,
                  ease: "easeOut",
                }}
              />
            ))}
          </>
        )}
      </AnimatePresence>

      {/* Main Content */}
      <motion.div
        className="relative z-10 max-w-2xl w-full mx-4 max-h-[90vh] overflow-y-auto"
        initial={{ scale: 0.5, opacity: 0 }}
        animate={{ scale: 1, opacity: 1 }}
        transition={{ type: "spring", duration: 0.6 }}
      >
        <Card className="bg-black/90 border-4 border-yellow-500 p-4 md:p-8 neon-glow-yellow">
          {isJackpot && (
            <motion.div
              className="text-center"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
            >
              {/* Jackpot Animation */}
              <motion.div
                animate={{
                  scale: [1, 1.2, 1],
                  rotate: [0, 5, -5, 0],
                }}
                transition={{
                  duration: 0.8,
                  repeat: Infinity,
                  repeatType: "reverse",
                }}
                className="mb-6"
              >
                <Trophy className="w-24 h-24 md:w-32 md:h-32 text-yellow-300 mx-auto neon-text-yellow pulse-glow" />
              </motion.div>

              <motion.h1
                className="text-4xl md:text-6xl neon-text-yellow text-yellow-300 mb-4"
                animate={{
                  textShadow: [
                    "0 0 20px #ffd700",
                    "0 0 40px #ffd700",
                    "0 0 20px #ffd700",
                  ],
                }}
                transition={{ duration: 1, repeat: Infinity }}
              >
                üé∞ JACKPOT! üé∞
              </motion.h1>

              <AnimatePresence>
                {showPrize && (
                  <motion.div
                    initial={{ scale: 0, opacity: 0 }}
                    animate={{ scale: 1, opacity: 1 }}
                    transition={{ type: "spring", duration: 0.5 }}
                  >
                    <div className="text-5xl md:text-8xl text-yellow-300 neon-text-yellow mb-6 pulse-glow">
                      {formatNumber(entry.prizeAmount || 0)} CSPR
                    </div>
                    <p className="text-lg md:text-2xl text-white mb-8">
                      You won the entire prize pool! üèÜ
                    </p>
                    <div className="flex gap-4 justify-center mb-6">
                      {[...Array(5)].map((_, i) => (
                        <motion.div
                          key={i}
                          initial={{ opacity: 0, y: 20 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: i * 0.1 }}
                        >
                          <Star
                            className="w-8 h-8 text-yellow-400 neon-text-yellow"
                            fill="currentColor"
                          />
                        </motion.div>
                      ))}
                    </div>
                  </motion.div>
                )}
              </AnimatePresence>

              <div className="bg-black/40 rounded-xl p-3 md:p-4 mb-4 md:mb-6 border border-yellow-500/50">
                <div className="text-xs md:text-sm text-gray-400 space-y-1">
                  <div>
                    Play ID:{" "}
                    <span className="text-yellow-300">#{entry.playId}</span>
                  </div>
                  <div>
                    Round:{" "}
                    <span className="text-yellow-300">#{entry.roundId}</span>
                  </div>
                  <div className="break-all">
                    Request ID:{" "}
                    <span className="text-cyan-300 font-mono text-[10px] md:text-xs">
                      {entry.requestId.substring(0, 16)}...
                    </span>
                  </div>
                </div>
              </div>

              <Button
                onClick={onClose}
                className="casino-gradient neon-glow-yellow hover:scale-110 transition-transform text-base md:text-xl px-8 md:px-12 py-4 md:py-6 cursor-pointer text-white rounded-xl"
              >
                <Sparkles className="w-5 h-5 md:w-6 md:h-6 mr-2" />
                Celebrate! üéâ
              </Button>
            </motion.div>
          )}

          {isConsolation && (
            <motion.div
              className="text-center"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
            >
              {/* Consolation Prize Animation */}
              <motion.div
                animate={{
                  scale: [1, 1.1, 1],
                }}
                transition={{
                  duration: 0.6,
                  repeat: Infinity,
                  repeatType: "reverse",
                }}
                className="mb-6"
              >
                <Coins className="w-28 h-28 text-cyan-300 mx-auto neon-text-cyan pulse-glow" />
              </motion.div>

              <motion.h1
                className="text-3xl md:text-5xl neon-text-cyan text-cyan-300 mb-4"
                animate={{
                  textShadow: [
                    "0 0 20px #00ffff",
                    "0 0 40px #00ffff",
                    "0 0 20px #00ffff",
                  ],
                }}
                transition={{ duration: 1, repeat: Infinity }}
              >
                üéâ YOU WON! üéâ
              </motion.h1>

              <p className="text-base md:text-xl text-white mb-6">
                Consolation Prize
              </p>

              <AnimatePresence>
                {showPrize && (
                  <motion.div
                    initial={{ scale: 0, opacity: 0 }}
                    animate={{ scale: 1, opacity: 1 }}
                    transition={{ type: "spring", duration: 0.5 }}
                  >
                    <div className="text-4xl md:text-7xl text-cyan-300 neon-text-cyan mb-6 pulse-glow">
                      {formatNumber(entry.prizeAmount || 0)} CSPR
                    </div>
                    <p className="text-sm md:text-lg text-gray-300 mb-8">
                      Nice win! Better luck next time for the jackpot! üí∞
                    </p>
                  </motion.div>
                )}
              </AnimatePresence>

              <div className="bg-black/40 rounded-xl p-3 md:p-4 mb-4 md:mb-6 border border-cyan-500/50">
                <div className="text-xs md:text-sm text-gray-400 space-y-1">
                  <div>
                    Play ID:{" "}
                    <span className="text-cyan-300">#{entry.playId}</span>
                  </div>
                  <div>
                    Round:{" "}
                    <span className="text-cyan-300">#{entry.roundId}</span>
                  </div>
                  <div className="break-all">
                    Request ID:{" "}
                    <span className="text-cyan-300 font-mono text-[10px] md:text-xs">
                      {entry.requestId.substring(0, 16)}...
                    </span>
                  </div>
                </div>
              </div>

              <Button
                onClick={onClose}
                className="casino-gradient neon-glow-cyan hover:scale-110 transition-transform text-base md:text-xl px-8 md:px-12 py-4 md:py-6 cursor-pointer text-white rounded-xl"
              >
                <Sparkles className="w-5 h-5 md:w-6 md:h-6 mr-2" />
                Awesome! üéä
              </Button>
            </motion.div>
          )}

          {!isWin && (
            <motion.div
              className="text-center"
              initial={{ opacity: 0, y: 20 }}
              animate={{ opacity: 1, y: 0 }}
            >
              {/* Loss Animation */}
              <motion.div
                animate={{
                  scale: [1, 0.95, 1],
                }}
                transition={{
                  duration: 1.5,
                  repeat: Infinity,
                  repeatType: "reverse",
                }}
                className="mb-6"
              >
                <Zap className="w-24 h-24 text-gray-500 mx-auto opacity-50" />
              </motion.div>

              <h1 className="text-2xl md:text-4xl text-gray-300 mb-4">
                Better Luck Next Time
              </h1>

              <p className="text-base md:text-xl text-gray-400 mb-8">
                You didn&apos;t win this time, but every ticket helps grow the
                jackpot! üí™
              </p>

              <div className="bg-black/40 rounded-xl p-4 md:p-6 mb-6 md:mb-8 border border-gray-500/30">
                <div className="text-xs md:text-sm text-gray-400 space-y-2">
                  <div>
                    Play ID: <span className="text-white">#{entry.playId}</span>
                  </div>
                  <div>
                    Round: <span className="text-white">#{entry.roundId}</span>
                  </div>
                  <div className="pt-2 md:pt-3 border-t border-gray-600">
                    <p className="text-gray-300 mb-2 text-xs md:text-sm">
                      Keep trying!
                    </p>
                    <div className="flex items-center justify-center gap-2 text-[10px] md:text-xs flex-wrap">
                      <div className="flex items-center gap-1">
                        <div className="w-2 h-2 rounded-full bg-yellow-400"></div>
                        <span>10% Jackpot</span>
                      </div>
                      <div className="flex items-center gap-1">
                        <div className="w-2 h-2 rounded-full bg-cyan-400"></div>
                        <span>25% Consolation</span>
                      </div>
                    </div>
                  </div>
                </div>
              </div>

              <Button
                onClick={onClose}
                className="casino-gradient neon-glow-pink hover:scale-110 transition-transform text-base md:text-xl px-8 md:px-12 py-4 md:py-6 cursor-pointer text-white rounded-xl"
              >
                <Sparkles className="w-5 h-5 md:w-6 md:h-6 mr-2" />
                Try Again!
              </Button>
            </motion.div>
          )}
        </Card>
      </motion.div>
    </motion.div>
  );
}
